# This workflow will build a Java project with Maven

name: Java CI with Maven in Linux

on:
   push:
      branches:
      - master
      - task*
   pull_request:
      types: [opened, synchronize, reopened]

jobs:
   build:
      runs-on: ubuntu-latest
      env:
         workdir: com.ciodar.scoreboard
      strategy:
         matrix:
            include:
# test against several Java versions - Java 17 for Sonar
            -  java: 8
            -  java: 17
               additional-maven-args: >
                  -Pcoveralls,mutation-testing sonar:sonar  
                  -DrepoToken=$COVERALLS_REPO_TOKEN
                  -DpullRequest=${{ github.event.pull_request.number }}
                  -Dsonar.projectKey=ciodar_tdd-scoreboard
      name: Build with Java ${{ matrix.java }} on Linux
      steps:
      -  uses: actions/checkout@v2
      -  name: Set up JDK ${{ matrix.java }}
         uses: actions/setup-java@v1
         with:
            java-version: ${{ matrix.java }}
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
           path: ~/.sonar/cache
           key: ${{ runner.os }}-sonar-
           restore-keys: ${{ runner.os }}-sonar-
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
           path: ~/.m2
           key: ${{ runner.os }}-m2-jdk${{ matrix.java }}-${{ hashFiles('**/pom.xml', '**/*.yml') }}
           restore-keys: ${{ runner.os }}-m2-jdk${{ matrix.java }}-
      -  name: Build with Maven
         run: |
            mvn verify ${{ matrix.additional-maven-args }}
         working-directory: ${{ env.workdir }}
         env:
            COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      -  name: Generate JUnit Report
         run: |
            mvn surefire-report:report-only site:site -DgenerateReports=false
         working-directory: ${{ env.workdir }}
         if: ${{ always() }}
      -  name: Archive JUnit Report
         uses: actions/upload-artifact@v3
         if: ${{ always() }}
         with:
            name: surefire-report-jdk-${{ matrix.java }}
            path: '**/target/site'